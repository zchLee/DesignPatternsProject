package com.lea.pattern_15_combination;

/**
 * @author lzc
 * @create 2020-11-23 10:59
 * 组合模式也叫合成模式，有时也叫部分-整体模式，主要是用来描述部分与整体的关系
 *      将对象组合成树状结构以表示 “部分-整体” 的层次结构，使得用户对单个对象和组合对象的使用具有一致性。
 * 它的组合模式有三种角色
 * 1、Component抽象构建角色
 *      定义参加组合对象的共有方法，可以定义一些默认的行为属性，比如我们例子中的getInfo就封装到抽象类中
 * 2、Leaf叶子节点
 *      叶子对象，其下再没有其他的分支，也就是遍历的最小单位
 * 3、Composite树枝构件
 *      树枝对象，它的作用是组合树枝节点和叶子节点形成一个树形结构
 *
 * 优点：
 *      高层调用简单
 *              局部或整体对调用者来说没有任何区别
 *      节点自由增加
 * 缺点：
 *  树叶、树枝直接使用了实现类，与依赖倒转原则冲突
 *
 *
 *  使用场景：
 *      1.维护和展示部分-整体关系场景时，如树状图，文件和文件管理
 *      2.从一个整体中能够独立出部分模块或功能的场景
 *  注意事项：
 *      只要是树形结构，就要考虑使用组合模式，只要是要体现局部和整体的关系的时候，而且这种关系还可能比较深，考虑下组合模式
 *
 *  扩展：
 *      此例是安全组合模式。还有个是透明组合模式，透明模式指将用来组合的方法放到抽象类，具体由子类实现，而叶子节点不需要
 *      这些的时候，在实现方法后直接抛出异常
 *
 */
public class CombinationMain {
}
